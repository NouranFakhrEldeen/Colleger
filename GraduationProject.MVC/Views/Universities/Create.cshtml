@model GraduationProject.Data.Entities.University

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Dashboard_Layout.cshtml";
}


<div class="container container-md-fluid">


    <div class="row mt-2">



    @using (Html.BeginForm("Create", "Universities", FormMethod.Post, new { enctype = "multipart/form-data", @class="col-lg-8 offset-lg-2 col-md-12 offset-md-0" }))
    {
        @Html.AntiForgeryToken()

        <div class="form bg-light rounded-lg border p-3" >
            <h4 class="text-center py-1 my-1">Add New University</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group row">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2 col-sm-12 text-left" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2 col-sm-12 text-left" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control" } )
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Logo, new { @class = "control-label col-md-2 col-sm-12 text-left" })
                <div class="col-md-10">
                    <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                    @Html.ValidationMessageFor(model => model.Logo)
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Governorate, htmlAttributes: new { @class = "control-label col-md-2 col-sm-12 text-left" })
                <div class="col-md-10">
                    <select id="Governorate" name="Governorate" class="form-control" GovernorateSelector></select>
                    @Html.ValidationMessageFor(model => model.Governorate, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row">
                @Html.LabelFor(model => model.Street, htmlAttributes: new { @class = "control-label col-md-2 col-sm-12 text-left" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Street, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Street, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2 col-sm-12 text-left" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Zipcode, htmlAttributes: new { @class = "control-label col-md-2 col-sm-12 text-left" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Zipcode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Zipcode, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group row">
                <div class="col-sm-12 col-md-6 offset-md-3 col-lg-4 offset-lg-4">
                    <input type="submit" value="Create" class="btn btn-lg btn-primary bg-clr-primary text-center w-100" />
                </div>
            </div>
        </div>

    }
    </div>
</div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
<script type="text/javascript">
    function fileCheck(obj) {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
        }
    }
</script>